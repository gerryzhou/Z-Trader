{ Search Tag: %Chg with last Day close }

{ 

}
using elsystem;
using elsystem.collections;
using tsdata.common;

inputs: 
	Price( Close ) [DisplayName = "Price", ToolTip = 
	 "Enter an EasyLanguage expression to use in the percentage change calculation."], 
	Length( 1 ) [DisplayName = "Length", ToolTip = 
	 "Enter number of bars over which to calculate percentage change."], 
	PctChgMALen( 10 ) [DisplayName = "PctChgMALen", ToolTip = 
	 "Enter number of bars over which to calculate summization of PctChg."], 
	BarsAgoHiTH( 1 ) [DisplayName = "BarsAgoHiTH", ToolTip = 
	 "Enter number of bars over which to check Hi threshold for PctSpd."], 
	BarsAgoLoTH( 0 ) [DisplayName = "BarsAgoLoTH", ToolTip = 
	 "Enter number of bars over which to check Lo threshold for PctSpd."], 
	CapRatio1( 3 ) [DisplayName = "CapRatio1", ToolTip = 
	 "Enter ratio of Data1 capital vs Data2 capital."],
	CapRatio2( 1.5 ) [DisplayName = "CapRatio2", ToolTip = 
	 "Enter ratio of Data1 capital vs Data2 capital."],
	HedgeCapRatioAdj( 2 ) [DisplayName = "CapRatioAdj", ToolTip = 
	 "Enter adjusted ratio of CapRatio giving to Data1 VS Data2 bull wing."],
	HedgeCapRatioMax( 4 ) [DisplayName = "CapRatioMax", ToolTip = 
	 "Enter min CapRatio allowed"],
	HedgeCapRatioMin( 1 ) [DisplayName = "CapRatioMin", ToolTip = 
	 "Enter max CapRatio allowed."],
	CapRatioTimeStart( 300 ) [DisplayName = "CapRatioTimeStart", ToolTip = 
	 "Enter the start time HHMM to caculate the CapRatio."],
	CapRatioTimeEnd( 810 ) [DisplayName = "CapRatioTimeEnd", ToolTip = 
	 "Enter the end time HHMM to caculate the CapRatio."],
	HiQAlert( 3 ) [DisplayName = "HiQAlert", ToolTip = 
	 "Enter percentage amount above which an alert will be triggered.  Example:  10."],
	HiVAlert( 13 ) [DisplayName = "HiVAlert", ToolTip = 
	 "Enter percentage amount above which an alert will be triggered.  Example:  10."],
	HiBAlert( 1 ) [DisplayName = "HiBAlert", ToolTip = 
	 "Enter percentage amount above which an alert will be triggered.  Example:  10."],
	HiThreshold( 10 ) [DisplayName = "HiThreshold", ToolTip = 
	 "Enter percentage amount above which an alert will be triggered.  Example:  10."],
	LoQAlert( -1 ) [DisplayName = "LoQAlert", ToolTip = 
	 "Enter percentage amount below which an alert will be triggered.  Example:  -10."],
	LoVAlert( -1 ) [DisplayName = "LoVAlert", ToolTip = 
	 "Enter percentage amount below which an alert will be triggered.  Example:  -10."],
	LoBAlert( -5 ) [DisplayName = "LoBAlert", ToolTip = 
	 "Enter percentage amount below which an alert will be triggered.  Example:  -10."],
	LoThreshold( -5 ) [DisplayName = "LoThreshold", ToolTip = 
	 "Enter percentage amount below which an alert will be triggered.  Example:  -10."],
	UpQColor( Cyan ) [DisplayName = "UpQColor", ToolTip = 
	 "Enter plot color to use when percentage change is greater than HiAlert."], 
 	UpVColor( Magenta ) [DisplayName = "UpVColor", ToolTip = 
	 "Enter plot color to use when percentage change is greater than HiAlert."], 
	UpBColor( Yellow ) [DisplayName = "UpBColor", ToolTip = 
	 "Enter plot color to use when percentage change is greater than HiAlert."], 
	DnQColor( Cyan ) [DisplayName = "DnQColor", ToolTip = 
	 "Down Color.  Enter plot color to use when percentage change is less than LoAlert."],
	DnVColor( Magenta ) [DisplayName = "DnVColor", ToolTip = 
	 "Down Color.  Enter plot color to use when percentage change is less than LoAlert."],
	DnBColor( Yellow ) [DisplayName = "DnRColor", ToolTip = 
	 "Down Color.  Enter plot color to use when percentage change is less than LoAlert."] ;
	 
variables:
	PctSpd1( 0 ),
	PctSpd2( 0 ),
	HedgeCapRatio( 1 ),
	CurCapRatio1( CapRatio1 ),
	CurCapRatio2( CapRatio2 ),
	CapRatioMaLen( 10 ),
	PctChg1( 0 ),
	PctChg2( 0 ),
	PctChg11( 0 ),
	PctChg22( 0 ),
	PrcData1( 0 ),
	PrcData2( 0 ),
	BaseData1( 0 ),
	BaseData2( 0),
	BaseData11( 0 ),
	BaseData22( 0),
	BarNoStr(""),
	UpColor(white),
	DnColor(white),
	HiAlert(0),
	LoAlert(0),
	PnL(1),
	TotalBars(0),
	TotalLoTH(0),
	TotalHiTH(0),
	int Status(0),
	bool ReadCmd(false),
	int lineCount(0),
	Vector oCmdVector(NULL);
	//SymbolAttributesProvider SymbolProvider(NULL) ;

//Array: oCmdArray[]("");

{ Status: LowBand = 0, HiTH = 1, LoTH = -1
}
method int SetStatus(double spd)
variables:  int status;
begin
	Status = status;
	return status;
end;

{ Set capratio
}
method void SetCapRatio()
variables: int min, double sum1, double sum2;
begin
	if(bartype = 1) then begin //1=minute
		min = (TimeToMinutes(CapRatioTimeEnd) - TimeToMinutes(CapRatioTimeStart))/2;
		CapRatioMaLen = min/BarInterval;

		if(CapRatioMaLen > 0 and Currentbar > CapRatioMaLen) Then begin
			sum1 = Summation(PctChg1, PctChgMALen); //HighestFC
			sum2 = Summation(PctChg2, PctChgMALen);
			if(sum1 <> 0 and sum2 <> 0) Then
				CurCapRatio1 = Absvalue(sum2/sum1);
			if(sum2 > 0) Then
				CurCapRatio1 = CurCapRatio1/HedgeCapRatioAdj
			else if (sum1 > 0) Then
				CurCapRatio1 = CurCapRatio1*HedgeCapRatioAdj;
			//CurCapRatio = 1/Absvalue(XAverage(PctSpd, CapRatioMaLen));
			if CurCapRatio1 > HedgeCapRatioMax Then
				CurCapRatio1 = HedgeCapRatioMax;
			if CurCapRatio1 < HedgeCapRatioMin Then
				CurCapRatio1 = HedgeCapRatioMin;
		end;
	end;
end;

{ Set capratio
}
method double GetBasePrice(int len)
variables:  double prc;
begin
	prc = Close;
	
	return prc;
end;

{ Status: LowBand = 0, HiTH = 1, LoTH = -1
}
method bool CheckHiThreshold(int barsAgo)
variables:  bool status, int i;
begin
	status = false;
	for i=0 to barsAgo Begin
		if(PctSpd1[i] > HiThreshold) Then
			status = true;
	end;
	return status;
end;

{ Status: LowBand = 0, HiTH = 1, LoTH = -1
}
method bool CheckLoThreshold(int barsAgo)
variables:  bool status, int i;
begin
	status = false;
	for i=0 to barsAgo Begin
		if(PctSpd1[i] <= LoThreshold) Then
			status = true;
	end;
	return status;
end;

{ 

method bool CheckSessionOpen()
variables:  bool status;
begin
	status = false;
	//if(Bartype = 2 or Dayofmonth(Date[0]) <> Dayofmonth(Date[1])) then
	if(Bartype = 2 or GF_FirstBarDay(0)) then
		status = true;
	return status;
end;


method bool FirstBarOfDay()
Variables: bool isFirstBar;
Begin
	isFirstBar = false;
	if ( BarType < 2 or BarType = 14 )  //ie, if tick, second or minute bars 
	and	Date <> Date[1] then isFirstBar = true;
	return isFirstBar;
End;
}
//Array_setmaxindex(oCmdArray, 1048576);

once Begin {once}
	//SymbolProvider = SymbolAttributesProvider.Create();
	Print("Category=", Category, ",  SecurityType.Future=", SecurityType.Future, ",  Stock=", SecurityType.Stock);
	Print("SessionStartTime auto=", SessionStartTime(0,1), ",", SessionStartTime(0,2), ",", SessionStartTime(0,3));
	Print("SessionStartTime reg=", SessionStartTime(1,1), ",", SessionStartTime(1,2), ",", SessionStartTime(1,3));
	Print("SessionEndTime auto=", SessionEndTime(0,1), ",", SessionEndTime(0,2), ",", SessionEndTime(0,3));
	Print("SessionEndTime reg=", SessionEndTime(1,1), ",", SessionEndTime(1,2), ",", SessionEndTime(1,3));
end;

if Currentbar = 1 then once Begin
	oCmdVector = Vector.Create();
	//Print("SymbolProvider=", SymbolProvider.SymbolType.ToString(), "Maxbarsback=", Maxbarsback);
end;


if Currentbar < 2 or LastBarOnChart then Begin
	//ReadCmd = GF_LoadFile("c:/www/cmd/ztrader_cmd_ts.json", oCmdVector);
{	for lineCount = 0 to Array_GetMaxIndex(oCmdArray) Begin
		Print("R-", oCmdArray[lineCount]);
	end;}
	for lineCount = 0 to oCmdVector.Count-1 Begin
		//Print("R-", oCmdVector[lineCount].ToString());
	end;
end;


PrcData1 = Close of Data1;
PrcData2 = Close of Data2;

if GF_IsIntradayBar then begin { ie, if tick, second or minute bars }
	if GF_FirstBarSession(Sessionstarttime(0, 2), False) then
		SetCapRatio();
	if(GF_FirstBarDay(0)) then begin
		PrcData1 = Open of Data1;
		PrcData2 = Open of Data2;
		BaseData11 = CloseD(Length+1) of Data1;
		BaseData22 = CloseD(Length+1) of Data2;
	End
	else Begin
		PrcData1 = Close of Data1;
		PrcData2 = Close of Data2;
	end;
	BaseData1 = CloseD(Length) of Data1;//OpenD(0) of Data1;
	BaseData2 = CloseD(Length) of Data2;//OpenD(0) of Data2;
End
else Begin {Daily or higher timeframe}
	PrcData1 = Open of Data1;
	PrcData2 = Open of Data2;
	BaseData1 = Close[Length] of Data1;
	BaseData2 = Close[Length] of Data2;
end;
{BaseData1 = CloseD(Length) of Data1;
BaseData2 = CloseD(Length) of Data2;
}
if(BaseData1 <> 0 and BaseData2 <> 0) then
	begin
		PctChg1 = GF_PercentChg( PrcData1, BaseData1 ) ;
		PctChg2 = GF_PercentChg( PrcData2, BaseData2 ) ;
		PctSpd1 = CurCapRatio1*PctChg1 + PctChg2;
		PctSpd2 = CurCapRatio2*PctChg1 + PctChg2;
		if (GF_IsIntradayBar and BaseData1 <> 0 and BaseData2 <> 0) then Begin
			PctChg11 = GF_PercentChg( PrcData1, BaseData11 ) ;
			PctChg22 = GF_PercentChg( PrcData2, BaseData22 ) ;
			PctSpd1 = CurCapRatio1*PctChg11 + PctChg22;
		end;
		if((PctChg1 * PctChg2) > 0) Then begin //Both are the same direction, both up or both dn, it's balanced;
			UpColor = UpBColor;
			DnColor = DnBColor;
			HiAlert = HiBAlert;
			LoAlert = LoBAlert;
			//Print(Currentbar, "-Convergence: PctChg1, PctChg1=", PctChg1, ",", PctChg2, "  DT=", string.Format("{0:MM/dd/yyyy HH:mm:ss}", BarDateTime[0]));
			//Print("Currentbar=", Currentbar, ", PctSpd=", PctSpd, ", Symbol=", Symbol );
			//PctSpd = 0;
		end
		else if(PctChg1 > 0) then Begin
				UpColor = UpQColor;
				DnColor = DnQColor;
				HiAlert = HiQAlert;
				LoAlert = LoQAlert;
		End
		else if(PctChg2 > 0) then Begin
				UpColor = UpVColor;
				DnColor = DnVColor;
				HiAlert = HiVAlert;
				LoAlert = LoVAlert;
		end;
		{if (PctChg1 <> 0) Then
			PctRatio = Absvalue(PctChg2/PctChg1);}
		if(currentbar > Maxbarsback) then begin //CheckLoThreshold(BarsAgoLoTH) <> true and CheckHiThreshold(BarsAgoHiTH) <> true) then //PctSpd > LoThreshold
			if(( bartype = 2 and CheckLoThreshold(BarsAgoLoTH) <> true and CheckHiThreshold(BarsAgoHiTH) <> true) or GF_FirstBarDay(0)) then begin
				PnL = PnL*(1 + PctSpd1/100);
				Print(String.Format("{0}	{1}	{2:MM/dd/yyyy}	{3}	{4}		{5}		{6}		{7}		{8}",
					Numtostr(PctSpd1, 2), Numtostr(PnL, 2), BarDateTime[0], Numtostr(PctChg1, 2), Numtostr(PrcData1, 2), Numtostr(BaseData1, 2),
					 Numtostr(PctChg2, 2), Numtostr(CapRatio1, 1), Numtostr(CurCapRatio1, 1)));
				//Print(Numtostr(PctSpd, 2), ", ", Numtostr(PnL, 2), ",", string.Format("{0:MM/dd/yyyy HH:mm:ss}", BarDateTime[0]));
			end;
		end;
		// Print("PctSpd, PnL=", Numtostr(PctSpd[1], 2), ", ", Numtostr(PnL[1], 2), "  DT=", string.Format("{0:MM/dd/yyyy HH:mm:ss}", BarDateTime[1]));
	end;
BarNoStr = "%Chg" + Numtostr(BarNumber, 0) + "," + Numtostr(PctChg1, 0) + "," + Numtostr(PctChg2, 0);

Plot1( PctSpd1, !( "%Spd1" ) ) ;
Plot2( PctSpd2, !( "%Spd2" ) ) ;
Plot3( PctChg1, !( "%PctChg1" ) ) ;
Plot4( PctChg2, !( "%PctChg2" ) ) ;
if GF_IsIntradayBar then Begin
	if GF_FirstBarSession(Sessionstarttime(0, 2), False) or GF_LastBarSession(Sessionendtime(0, 3)) then Begin
		Plot5( CurCapRatio1, !( "CurCapRatio1" ) ) ;
		SetPlotColor( 5, White ) ;
	end
	else
		Noplot(5);
end;
Plot6( HedgeCapRatioAdj, "MeanRevLine" ) ;

//Plot3( PctRatio, "PctRatio" ) ;
{SetPlotWidth(1, 2);
SetPlotWidth(2, 1);
SetPlotWidth(3, 1);
SetPlotWidth(4, 1);
}


{ color criteria }
if PctSpd1 > HiAlert then 
	SetPlotColor( 1, UpColor ) 
else if PctSpd1 < LoAlert then 
	SetPlotColor( 1, DnColor ) ;
SetPlotColor( 3, DarkGray ) ;
SetPlotColor( 4, DarkGray ) ;
//SetPlotColor( 6, Magenta ) ;

{
if PctRatio > HiAlert then 
	SetPlotColor( 3, UpRColor ) 
else if PctRatio < LoAlert then 
	SetPlotColor( 3, DnRColor ) ;
}
{ alert criteria }
if AlertEnabled then
	begin
	if PctSpd1 crosses over HiAlert then
		Alert( !( "Bullish alert"+Numtostr(HiAlert,2) ) )
	else if PctSpd1 crosses under LoAlert then
		Alert( !( "Bearish alert"+Numtostr(LoAlert,2) ) ) ;
	end ;

if(PctSpd1 > HiThreshold) Then
	TotalHiTH += 1;
if(PctSpd1 <= LoThreshold) Then
	TotalLoTH += 1;

if LastBarOnChart then Begin
	TotalBars = Currentbar;
	//Print("TotalBars, %LoTH, %HiTH = ", TotalBars, ",  ", Numtostr(100*TotalLoTH/TotalBars, 2), "%,  ", Numtostr(100*TotalHiTH/TotalBars, 2), "%");
end;

{ ** Copyright © TradeStation Technologies, Inc.  All Rights Reserved ** 
  ** TradeStation reserves the right to modify or overwrite this analysis technique 
     with each release. ** }